{"version":3,"sources":["types/SortType.ts","components/GoodList.tsx","App.tsx","services/PreparedGoods.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","useState","default","sortBy","setSortBy","reverse","setReverse","visibleGoods","howSort","preparedGoods","sort","good1","good2","name","localeCompare","length","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,mECMCC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,U,SDVpBJ,K,YAAAA,E,gBAAAA,E,YAAAA,M,gBEQL,IAAMK,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA4BC,mBAAmBP,EAASQ,SAAxD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,ECtBD,SACLX,EACAY,GAEC,IADDH,EACA,wDACMI,EAAa,YAAOb,GAqB1B,OAnBIY,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKd,EAASmB,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFI,EAAcJ,UAGTI,EDJcO,CAAiBjB,EAAiBI,EAAQE,GAO/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYhB,IAAWT,EAASmB,OAGtCO,QAAS,kBAAMhB,EAAUV,EAASmB,OATpC,iCAcA,wBACEK,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYhB,IAAWT,EAASqB,SAGtCK,QAAS,kBAAMhB,EAAUV,EAASqB,SATpC,4BAcA,wBACEG,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAad,IAGnBe,QAAS,kBAAMd,GAAYD,IAT7B,sBAcEF,GAAUE,IACV,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAtDU,WAClBhB,EAAUV,EAASQ,SACnBI,GAAW,IAiDL,sBAUJ,cAAC,EAAD,CAAUV,MAAOW,QEpFvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1f12201.chunk.js","sourcesContent":["export enum SortType {\n  name = 'name',\n  length = 'length',\n  default = '',\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good: string) => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { GoodList } from './components/GoodList';\nimport { SortType } from './types/SortType';\nimport { getPreparedGoods } from './services/PreparedGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType>(SortType.default);\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, reverse);\n\n  const handleReset = () => {\n    setSortBy(SortType.default);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortBy !== SortType.name },\n            )\n          }\n          onClick={() => setSortBy(SortType.name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortBy !== SortType.length },\n            )\n          }\n          onClick={() => setSortBy(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !reverse },\n            )\n          }\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import { SortType } from '../types/SortType';\n\nexport function getPreparedGoods(\n  goods: string[],\n  howSort: SortType,\n  reverse = false,\n) {\n  const preparedGoods = [...goods];\n\n  if (howSort) {\n    preparedGoods.sort((good1, good2) => {\n      switch (howSort) {\n        case SortType.name:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}