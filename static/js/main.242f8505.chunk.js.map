{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortBy","setSortBy","reverse","setReverse","visibleGoods","goods","howSort","preparedGoods","sort","good1","good2","name","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAAwB,IAApD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAhCD,SACLC,EACAC,GAEC,IADDJ,EACA,wDACMK,EAAa,YAAOF,GAqB1B,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EAASe,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXX,GACFK,EAAcL,UAGTK,EAMcO,CAAiBjB,EAAiBG,EAAQE,GAE/D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYjB,IAAWJ,EAASe,OAGtCO,QAAS,kBAAMjB,EAAUL,EAASe,OATpC,iCAcA,wBACEK,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYjB,IAAWJ,EAASiB,SAGtCK,QAAS,kBAAMjB,EAAUL,EAASiB,SATpC,4BAcA,wBACEG,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAaf,IAGnBgB,QAAS,kBAAMf,GAAYD,IAT7B,sBAcEF,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAU,IACVE,GAAW,IALf,sBAaJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCnHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.242f8505.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  name = 'name',\n  length = 'length',\n}\n\nexport function getPreparedGoods(\n  goods: string[],\n  howSort: SortType | '',\n  reverse = false,\n) {\n  const preparedGoods = [...goods];\n\n  if (howSort) {\n    preparedGoods.sort((good1, good2) => {\n      switch (howSort) {\n        case SortType.name:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType | ''>('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortBy !== SortType.name },\n            )\n          }\n          onClick={() => setSortBy(SortType.name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortBy !== SortType.length },\n            )\n          }\n          onClick={() => setSortBy(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !reverse },\n            )\n          }\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}